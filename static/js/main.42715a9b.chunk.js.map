{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendListItem/FriendListItem.module.css","components/StatisticsList/StatisticsList.module.css","components/Transactions/TransactionsList.module.css","components/TransactionItem/TransactionItem.module.css","components/Profile/Profile.js","components/StatisticItem/StatisticItem.js","components/StatisticsList/StatisticsList.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionItem/TransactionItem.js","components/Transactions/TransactionsList.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","stats","avatar","className","style","Container","Description","src","alt","width","Avatar","Name","Tag","Location","Stats","followers","views","likes","StatisticItem","format","percent","RandomColorForItem","Math","random","toFixed","StatisticsList","statisticalData","title","Statistics","length","Stat__list","map","id","label","percentage","backgroundColor","FriendListItem","isOnline","Item","Online","Ofline","Text__item","defaultProps","FriendList","friends","TransactionItem","type","currency","amount","Container__tr","TransactionsList","Transactions","Transaction__history","Header__table","App","user","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42715a9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Profile_Container__lhpso\",\"Profile\":\"Profile_Profile__1AAxu\",\"Description\":\"Profile_Description__1sxFI\",\"Avatar\":\"Profile_Avatar__1j461\",\"Name\":\"Profile_Name__3ldNq\",\"Tag\":\"Profile_Tag__1uBNx\",\"Location\":\"Profile_Location__1dDcS\",\"Stats\":\"Profile_Stats__3kM5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Status\":\"FriendListItem_Status__18Gl7\",\"Online\":\"FriendListItem_Online__XFcQY FriendListItem_Status__18Gl7\",\"Ofline\":\"FriendListItem_Ofline__1XkLW FriendListItem_Status__18Gl7\",\"Item\":\"FriendListItem_Item__2K6zx\",\"Text__item\":\"FriendListItem_Text__item__2hHfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"StatisticsList_Statistics__3CKZM\",\"Stat__list\":\"StatisticsList_Stat__list__sPOg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Transaction__history\":\"TransactionsList_Transaction__history__3wEUa\",\"Header__table\":\"TransactionsList_Header__table__2BHQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container__tr\":\"TransactionItem_Container__tr__1vAnV\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, stats, avatar }) => {\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.Profile}>\r\n        <div className={style.Description}>\r\n          <img\r\n            src={avatar}\r\n            alt=\"Аватар пользователя\"\r\n            width=\"200px\"\r\n            className={style.Avatar}\r\n          />\r\n          <p className={style.Name}>{name}</p>\r\n          <p className={style.Tag}>{tag}</p>\r\n          <p className={style.Location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={style.Stats}>\r\n          <li className={style}>\r\n            <span className=\"label\">Followers</span>\r\n            <span className=\"quantity\"> {stats.followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"label\">Views</span>\r\n            <span className=\"quantity\">{stats.views}</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"label\">Likes</span>\r\n            <span className=\"quantity\">{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.objectOf(PropTypes.number),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatisticItem = ({ format, percent }) => (\r\n  <>\r\n    <span className=\"label\">{format}</span>\r\n    <span className=\"percentage\">{percent} %</span>\r\n  </>\r\n);\r\n\r\nStatisticItem.propTypes = {\r\n  format: PropTypes.string.isRequired,\r\n  percent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;\r\n","import React from 'react';\r\nimport StatisticItem from '../StatisticItem/StatisticItem';\r\nimport PropTypes from 'prop-types';\r\nimport style from './StatisticsList.module.css';\r\n\r\nconst RandomColorForItem = () => {\r\n  const x = Math.random() * 255;\r\n  return x.toFixed(0);\r\n};\r\n\r\nconst StatisticsList = ({ statisticalData, title }) => {\r\n  return (\r\n    <section className={style.Statistics}>\r\n      <div>\r\n        {title.length > 0 && <h2 className=\"title\">{title}</h2>}\r\n        <ul className={style.Stat__list}>\r\n          {statisticalData.map(({ id, label, percentage }) => {\r\n            return (\r\n              <li\r\n                key={id}\r\n                className=\"item\"\r\n                style={{\r\n                  backgroundColor: `rgb(${RandomColorForItem()}, ${RandomColorForItem()}, ${RandomColorForItem()})`,\r\n                }}\r\n              >\r\n                {<StatisticItem format={label} percent={percentage} />}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// Так  можно прописать тип для итерируемого масива обьектов\r\nStatisticsList.propTypes = {\r\n  statisticalData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default StatisticsList;\r\n","import React from 'react';\r\nimport style from './FriendListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={style.Item}>\r\n      {isOnline ? (\r\n        <span className={style.Online}></span>\r\n      ) : (\r\n        <span className={style.Ofline}> </span>\r\n      )}\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className={style.Text__item}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar:\r\n    'https://cdn.pixabay.com/photo/2020/08/17/17/43/page-not-found-5496035_960_720.png',\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport PropTypes from 'prop-types';\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map(({ avatar, name, isOnline, id }) => {\r\n        return (\r\n          <FriendListItem\r\n            avatar={avatar}\r\n            name={name}\r\n            isOnline={isOnline}\r\n            key={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// Так  можно прописать тип для итерируемого масива обьектов\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport style from './TransactionItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionItem = ({ type, currency, amount }) => {\r\n  return (\r\n    <tr className={style.Container__tr}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React from 'react';\r\nimport TransactionItem from '../TransactionItem/TransactionItem';\r\nimport style from './TransactionsList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionsList = ({ Transactions }) => {\r\n  return (\r\n    <table className={style.Transaction__history}>\r\n      <thead className={style.Header__table}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {Transactions.map(({ type, id, amount, currency }) => {\r\n          return (\r\n            <TransactionItem\r\n              key={id}\r\n              type={type}\r\n              amount={amount}\r\n              currency={currency}\r\n            />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionsList.propTypes = {\r\n  Transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionsList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Profile from './components/Profile/Profile';\n\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport StatisticsList from './components/StatisticsList/StatisticsList';\nimport '../src/base.css';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionsList from './components/Transactions/TransactionsList';\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <StatisticsList\n        statisticalData={statisticalData}\n        title={'Upload stats'}\n      />\n      <FriendList friends={friends} />\n      <TransactionsList Transactions={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}